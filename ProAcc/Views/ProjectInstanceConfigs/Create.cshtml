@model ProACC_DB.ProjectInstanceConfig

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/shared/_Layout.cshtml";
}

<div style="min-height:100%;">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()


        <h4 class="card-title">PROJECT INSTANCE CONFIGURATION</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="col-12">
            <div class="col-lg-6">
                <div class="position-relative form-group">
                    @Html.LabelFor(model => model.InstaceName, "Instace Name", htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.InstaceName, new { htmlAttributes = new { @id = "txtInstName", @class = "form-control", @onchange = "ValidateInstName()" } })
                        @Html.ValidationMessageFor(model => model.InstaceName, "", new { @class = "text-danger" })
                        <span id="lblInstName" style="color:red"></span>
                    </div>
                </div>

                <div class="position-relative form-group">
                    @Html.LabelFor(model => model.CustProjconfigID, "Customer Project", htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-10">
                        @Html.DropDownList("CustProjconfigID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CustProjconfigID, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-lg-6">

            </div>
        </div>


        <div class="col-lg-6">
            <div class="position-relative form-group">
                <div class="col-md-offset-2 col-md-8">
                    <input type="submit" value="Create" class="btn btn-primary" />
                </div>
            </div>
        </div>
        <div class="col-lg-6">
            <div style="float:right;">
                @Html.ActionLink("Back to List", "Index")
            </div>
        </div>


    }
</div>


<script>
    function ValidateInstName() {
        debugger;
        var Instname = document.getElementById("txtInstName").value;
        var lblInstName = document.getElementById("lblInstName");
        lblInstName.innerHTML = "";
        var letters = /^[A-Za-z, ]+$/;
        if (!letters.test(Instname)) {
            lblInstName.innerHTML = "Please enter valid Instance Name";
        }
    }
</script>
<script type="text/javascript">
    $(function () {
        var msg = '@ViewBag.Message';
        if (msg == 'True')
        {
        alert("Enter the Details");
        }
    });
</script>

@*<div class="form-group">
        @Html.LabelFor(model => model.isActive, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.isActive)
                @Html.ValidationMessageFor(model => model.isActive, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>*@

@*<div class="form-group">
        @Html.LabelFor(model => model.LastUpdated_Dt, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.LastUpdated_Dt, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LastUpdated_Dt, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Cre_on, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Cre_on, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Cre_on, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Cre_By, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Cre_By, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Cre_By, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Modified_On, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Modified_On, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Modified_On, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Modified_by, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Modified_by, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Modified_by, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IsDeleted, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.IsDeleted)
                @Html.ValidationMessageFor(model => model.IsDeleted, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>*@



