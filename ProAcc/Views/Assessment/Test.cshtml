
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta charset="UTF-8">
    <title>chartjs-plugin-labels</title>
    @*<link href='https://fonts.googleapis.com/css?family=Roboto+Slab' rel='stylesheet' type='text/css'>
        <link rel="stylesheet" href="style.css">*@
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.6.0/Chart.bundle.min.js"></script>

    @*<script>
            if (location.protocol != 'file:') {
                (function (i, s, o, g, r, a, m) {
                    i['GoogleAnalyticsObject'] = r; i[r] = i[r] || function () {
                        (i[r].q = i[r].q || []).push(arguments)
                    }, i[r].l = 1 * new Date(); a = s.createElement(o),
                        m = s.getElementsByTagName(o)[0]; a.async = 1; a.src = g; m.parentNode.insertBefore(a, m)
                })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');

                ga('create', 'UA-44208259-3', 'auto');
                ga('send', 'pageview');
            }
        </script>*@
    <script src="~/Asset/Scripts/chartjs-plugin-labels.min.js"></script>
    @*<script src="~/Asset/Scripts/JavaScript.js"></script>*@
</head>
<body>
    @*<div id="header">
            <h1>chartjs-plugin-labels</h1>
            <a href="https://github.com/emn178/chartjs-plugin-labels"><img style="position: absolute; top: 0; right: 0; border: 0;" src="https://github-camo.global.ssl.fastly.net/a6677b08c955af8400f44c6298f40e7d19cc5b2d/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f72696768745f677261795f3664366436642e706e67" alt="Fork me on GitHub" data-canonical-src="https://s3.amazonaws.com/github/ribbons/forkme_right_gray_6d6d6d.png"></a>
        </div>*@
    <div class="chart-wrapper">
        <canvas id="doughnut-canvas1"></canvas>
    </div>
    @*<div id="footer">
            © 2017-2018 chartjs-plugin-labels Demo
        </div>*@
    <script>
        //function hexToRgb(hex) {
        //    // Expand shorthand form (e.g. "03F") to full form (e.g. "0033FF")
        //    var shorthandRegex = /^#?([a-f\d])([a-f\d])([a-f\d])$/i;
        //    hex = hex.replace(shorthandRegex, function (m, r, g, b) {
        //        return r + r + g + g + b + b;
        //    });

        //    var result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
        //    return result ? {
        //        r: parseInt(result[1], 16),
        //        g: parseInt(result[2], 16),
        //        b: parseInt(result[3], 16)
        //    } : null;
        //}
       var id = "doughnut-canvas1";
        function createChart(id) {
            debugger;
            var data = {
                labels: ['January', 'February', 'March'],
                datasets: [
                    {
                        label: 'My First dataset',
                        data: [50445, 33655, 15900],
                        backgroundColor: [
                            '#FF6384',
                            '#36A2EB',
                            '#FFCE56'
                        ]
                    }
                ]
            };

            new Chart(document.getElementById(id), {
                type: 'doughnut',
                data: data,
                options: {
                     responsive: true,
                maintainAspectRatio: false,
                legend: {
                    display: false
                },
                plugins: {
                    labels: {
                        render: 'value'
                    }
                }
                }
            });
        }

        ['doughnut'].forEach(function (type) {
            createChart(type + '-canvas1', type, {
                //responsive: true,
                //maintainAspectRatio: false,
                //legend: {
                //    display: false
                //},
                //plugins: {
                //    labels: {
                //        render: 'label'
                //    }
                //}
            });

        });
        //createChart('polarArea-canvas1', 'polarArea', {
        //    responsive: true,
        //    maintainAspectRatio: false,
        //    plugins: {
        //        labels: [
        //            {
        //                render: 'label',
        //                fontColor: '#000',
        //                position: 'outside'
        //            },
        //            {
        //                render: 'percentage',
        //                fontColor: ['green', 'white', 'red'],
        //                overlap: false,
        //                precision: 2
        //            }
        //        ]
        //    }
        //});

    </script>
    @*<link href="https://cdnjs.cloudflare.com/ajax/libs/SyntaxHighlighter/3.0.83/styles/shCore.css" rel="stylesheet">
        <link href="https://cdnjs.cloudflare.com/ajax/libs/SyntaxHighlighter/3.0.83/styles/shThemeDefault.css" rel="stylesheet">
        <script src="https://cdnjs.cloudflare.com/ajax/libs/SyntaxHighlighter/3.0.83/scripts/shCore.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/SyntaxHighlighter/3.0.83/scripts/shBrushJScript.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/SyntaxHighlighter/3.0.83/scripts/shBrushXml.js"></script>*@
    <script>
            //SyntaxHighlighter.all();
    </script>
</body>
</html>