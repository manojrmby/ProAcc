
@{
    ViewBag.Title = "ActivitieReport";
    Layout = "~/Views/shared/_Layout.cshtml";
}

<h5>Activities Report</h5>
<script src="~/Asset/Scripts/chartjs-plugin-labels.min.js"></script>

<div style="padding:1em;">
    <div class="row">
        <div class="col-md-12 card">
            @*<div class="row" style="padding:0em 1em 1em 1em;">
                    <div class="col-lg-6">
                        <label>SimplificationReport</label>
                    </div>

                </div>*@
            <canvas id="Chart_Activities"></canvas>
        </div>

    </div>
    <br />

    <div class="row">
        <div class="col-lg-12 card" style="min-height:600px;">
			<h4>
				Activities
			</h4>

            @*<table id="t01" class="table table-bordered table-hover">*@
		<div class="tableFixHead outer table-striped">
			<table>
				<thead>
					<tr>
						<th style="width:70px;">S.NO</th>
						<th>Related Simplification Items</th>
						<th>Activities</th>
						<th>Phase</th>
						<th>Condition</th>
						<th>Additional Information</th>
					</tr>
				</thead>
				<tbody>
					@foreach (var item in ViewBag.ARReport)
					{

						<tr>
							<td class="text-center">
								@item.S_No.
							</td>
							<td>
								@item.Related_Simplification_Items
							</td>
							<td>
								@item.Activities
							</td>
							<td>
								@item.Phase
							</td>
							<td>
								@item.Condition
							</td>
							<td>
								@item.Additional_Information
							</td>
						</tr>
					}
				</tbody>
			</table>
		</div>
			
     </div>

    </div>
</div>

<script type="text/javascript" charset="utf-8">
	function Ajax_Activities_Bar() {
		$.ajax({
			type: "POST",
			url: '@Url.Action("GetActivitiesReport_Bar")',
			//data: '{LOB: ' + JSON.stringify(a) + '}',
			dataType: "json",
			contentType: "application/json; charset=utf-8",
            success: function (Data) {
               
				var Output = Data._List;
				var inpName = [];
				var inpVal = [];
				var C = 0;
				for (var i = 0; i < Output.length; i++) {

					inpName.push(Output[i].Name);
					inpVal.push(Output[i]._Value);
					//var _Name = Output[i].Name;

					//if (_Name == 'Custom Code Adaption') {
					//	inpName.push(Output[i].Name);
					//	inpVal.push(Output[i]._Value);
					//} else if (_Name == 'Customizing / Configuration') {
					//	inpName.push(Output[i].Name);
					//	inpVal.push(Output[i]._Value);
					//} else if (_Name == 'User Training') {
					//	inpName.push(Output[i].Name);
					//	inpVal.push(Output[i]._Value);
					//} else {
					//	C = C + Output[i]._Value;
					//}
				}
				//inpName.push("Others");
				//inpVal.push(C);
				labels = inpName;
				data_ = inpVal;
				renderBar1Chart(data_, labels);
			},
			error: function () {
				alert("Error while inserting data");
			}
		}).done(function (response) {
			//chart.data = response;

		});
	}
	function renderBar1Chart(data, labels) {

		//Chart.defaults.global.defaultFontFamily = "Verdana";
		var ctx = document.getElementById("Chart_Activities").getContext("2d");

		

		var config = {
			//type: "horizontalBar",
			type: "bar",

			data: {
				labels: labels,
				datasets: [{

					data: data,
					label:"",
					
					backgroundColor: [
                            '#FF6384',
                            '#36A2EB',
                            '#FFCE56'
                        ],
					
				}]
			},
			

			options: {

				legend: {
					display: false,
                    position: "bottom",
                    onclick: null
				},
				 //tooltips: {
					//mode: 'label',
	 //     callbacks: {
	 //         label: function (tooltipItem, data) {

	 //     	return data.datasets[tooltipItem.datasetIndex].label + ": " + numberWithCommas(tooltipItem.yLabel);
	 //     }
	 //     }
	 //    },
				 title: {
					display: true,
					text: "Activities"
				},
				//hover: {
				//	animationDuration: 0
    //            },
				 plugins: {
                    labels: {
                         render: 'value'
						
                    }
                },
				//animation: {
				//	duration: 5000,
				//	onComplete: function () {
				//		var chartInstance = this.chart,
				//		ctx = chartInstance.ctx;
				//		ctx.font = Chart.helpers.fontString(Chart.defaults.global.defaultFontSize, Chart.defaults.global.defaultFontStyle, Chart.defaults.global.defaultFontFamily);
				//		ctx.textAlign = 'center';
				//		ctx.textBaseline = 'bottom';
				//		var height = chartInstance.controller.boxes[0].bottom;
				//		this.data.datasets.forEach(function (dataset, i) {
				//			var meta = chartInstance.controller.getDatasetMeta(i);
				//			meta.data.forEach(function (bar, index) {
				//				var data = dataset.data[index];
				//				 ctx.fillStyle = '#333';
				//				ctx.fillText(data, bar._model.x, height - ((height - bar._model.y) / 2) - 10);

				//			});
				//		}
				//		);
				//	}
				//},
				scales: {
					xAxes: [{
						ticks: {
                            display: false,//this will remove only the label
							beginAtZero: true
						},
                        gridLines: {
                            display: false,
                            drawBorder: true,
                            
                        }
					}],
					yAxes: [{
						ticks: {
                            display: false,//this will remove only the label
							beginAtZero: true
						},
                        gridLines: {
                            display: false,
                            drawBorder: false,
                        }
					}]
				}

			}


		};
		window.myRadialGauge = new Chart(ctx, config);
	}

	jQuery(document).ready(function ($) {


        Ajax_Activities_Bar();

		 $('#dtVerticalScrollExample').DataTable({
            "scrollY": "200px",
            "scrollCollapse": true,
        });
        $('.dataTables_length').addClass('bs-select');
	});
</script>