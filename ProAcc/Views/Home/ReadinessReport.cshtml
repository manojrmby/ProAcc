
@{
    ViewBag.Title = "ReadinessReport";
    Layout = "~/Views/shared/_Layout.cshtml";
}
<script src="~/Asset/Scripts/Chart.js"></script>
<script src="~/Asset/Scripts/Chart.RadialGauge.umd.js"></script>
<div style="padding:1em;">
    <div class="row">
        <div class="col-lg-12">
            <div class="row" style="padding:0em 1em 1em 1em;">
                <div class="col-lg-6">
                    <label>Simplification</label>
                    <canvas id="Chart_Relevant"></canvas>
                    @*<div id="Chart_Relevant"></div>*@
                    <label>Total:238</label>
                </div>
                <div class="col-lg-6">

                </div>
            </div>
        </div>
        <div class="col-lg-12">

        </div>
    </div>

</div>

<script type="text/javascript">

	function renderChart(data, labels) {

		Chart.defaults.global.defaultFontFamily = "Verdana";
		var ctx = document.getElementById("Chart_Relevant").getContext("2d");

var gradientStroke_ = ctx.createLinearGradient(500, 0, 100, 0);
		gradientStroke_.addColorStop(0, "#FDB777");
gradientStroke_.addColorStop(1, "#FD9346");

var gradientStroke_2 = ctx.createLinearGradient(500, 0, 100, 0);
gradientStroke_2.addColorStop(0, "#FB291B");
gradientStroke_2.addColorStop(1, "#CD1B2D");

var gradientStroke_3 = ctx.createLinearGradient(500, 0, 100, 0);
gradientStroke_3.addColorStop(0, "#FDB777");
gradientStroke_3.addColorStop(1, "#FD9346");

var gradientStroke_4 = ctx.createLinearGradient(500, 0, 100, 0);
gradientStroke_4.addColorStop(0, "#FB291B");
gradientStroke_4.addColorStop(1, "#CD1B2D");

var config = {
	type: "doughnut",
	data: {
		labels: labels,
		datasets: [
			{

				data: data,
				backgroundColor: [gradientStroke_, gradientStroke_2],
				backgroundColor: ["#3e95cd", "#8e5ea2", "#3cba9f", "#e8c3b9", "#c45850"],
				borderWidth: 2,
				label: "Score"
			}
		]
	},
	options: {
		responsive: true,
		legend: {
			display: false
		},
		title: {
			display: false,
			text: "Radial gauge chart"
		},
		centerPercentage: 60,
		centerArea: {
			displayText: true,
			text: "100%"
		}
	}
	};

				window.myRadialGauge = new Chart(ctx, config);
	}









jQuery(document).ready(function ($) {
		 $.ajax({
				type: "POST",
				url: '@Url.Action("GetSimplificationReport")',
				//data: '{std: ' + JSON.stringify(std) + '}',
				dataType: "json",
				contentType: "application/json; charset=utf-8",
			 success: function (Data) {
                 data_ = [Data.R, Data.RC, Data.RC_NON, Data.R_NON];
                 labels = ["Relevant", "Relevance to be Checked", "Relevance to be Checked (Non-strategic)", "Relevant (Non-strategic)"];
				 renderChart(data_, labels);

				},
				error: function () {
					alert("Error while inserting data");
				}
			});


	});

$("#Chart_Relevant").click(

	function (evt) {
		//alert(evt);
		//debugger;
		window.location.href = "@Url.Action("SimplificationReport","Home")";
		//var activePoints = myNewChart.getSegmentsAtEvent(evt);
		//var url = "http://example.com/?label=" + activePoints[0].label + "&value=" + activePoints[0].value;
		//alert(url);
	}
);
</script>