@model ProACC_DB.Customer

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Edit Customer</h4>
        <hr />
        <div class="row">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)


            <div class="col-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.UserName, "User Name", htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @id="Username", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>*@

                <div class="form-group">
                    @Html.LabelFor(model => model.UserTypeID, "User Type", htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-10">
                        @Html.DropDownList("UserTypeID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.UserTypeID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @id = "txtName", @class = "form-control", @onchange = "ValidateName()" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        <span id="lblName" style="color:red"></span>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Company, htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Company, new { htmlAttributes = new { @id = "txtComp", @class = "form-control", @onchange = "ValidateComp()" } })
                        @Html.ValidationMessageFor(model => model.Company, "", new { @class = "text-danger" })
                        <span id="lblComp" style="color:red"></span>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Work_Function, "Work Function", htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Work_Function, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Work_Function, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @id = "txtMobId", @class = "form-control", @onchange = "ValidateMobileNumber()" } })
                        @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                        <span id="lblMob" style="color:red"></span>
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @id="txtEmail",@class = "form-control", @onchange = "ValidateEmail()" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        <span id="lblEmail" style="color:red"></span>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-secondary" />
                    </div>
                </div>
            </div>
            

            <div class="col-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.EstimatedSale,"Estimated Sale", htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EstimatedSale, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EstimatedSale, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label id="lbllastcontact" class="control-label col-md-5">Last Contact Date</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LastContact_Dt, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastContact_Dt, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label id="lblnextaction" class="control-label col-md-5">Next Action Date</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.NextAction_Dt, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NextAction_Dt, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label id="lblnextcontact" class="control-label col-md-5">Next Contact Date</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.NextContact_Dt, new { htmlAttributes = new { @class = "form-control"} })
                        @Html.ValidationMessageFor(model => model.NextContact_Dt, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label id="lblleadstatus" class="control-label col-md-5">Lead Status</label>                    
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LeadStatus, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LeadStatus, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label id="lblleadsource" class="control-label col-md-5">Lead Source</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LeadSource, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LeadSource, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label id="lblcuststatus" class="control-label col-md-5">Customer Status</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Conv_Cust_Status, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Conv_Cust_Status, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-lg-5" style="float:right;">
                    @Html.ActionLink("Back to List", "Index")
                </div>
            </div>
            
        </div>
        
        @*<div class="form-group">
            @Html.LabelFor(model => model.isActive, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.isActive)
                    @Html.ValidationMessageFor(model => model.isActive, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cre_on, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cre_on, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cre_on, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cre_By, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cre_By, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cre_By, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Modified_On, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Modified_On, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Modified_On, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Modified_by, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Modified_by, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Modified_by, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsDeleted, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsDeleted)
                    @Html.ValidationMessageFor(model => model.IsDeleted, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>*@


    </div>
    }

    <script>
        jQuery(document).ready(function ($) {
            debugger;
            $("#Username").prop("disabled", true);
        });
    </script>
    
    <script>       

        function ValidateName()
      {
          debugger;
          var name = document.getElementById("txtName").value;
          var lblName = document.getElementById("lblName");
          lblName.innerHTML = "";
          var letters = /^[A-Za-z, ]+$/;
          if (!letters.test(name)) {
            lblName.innerHTML = "Please enter valid Name";
          }
    }
    
    function ValidateComp()
      {
          debugger;
          var Comp = document.getElementById("txtComp").value;
          var lblComp = document.getElementById("lblComp");
          lblComp.innerHTML = "";
          var letters = /^[A-Za-z, ]+$/;
          if (!letters.test(Comp)) {
            lblComp.innerHTML = "Please enter a valid Company Name";
          }
    }

        function ValidateEmail() {
        debugger;
        var email = document.getElementById("txtEmail").value;
        var lblEmail = document.getElementById("lblEmail");
        lblEmail.innerHTML = "";
        var expr = /^([\w-\.]+)@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([\w-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/;
        if (!expr.test(email)) {
            lblEmail.innerHTML = "Please enter valid email address.";
        }
    }

    function ValidateMobileNumber() {
        var mob = /^[1-9]{1}[0-9]{9}$/;
        var txtMobile = document.getElementById("txtMobId").value;
        lblMob.innerHTML = "";
        if (mob.test(txtMobile) == false) {
            lblMob.innerHTML = "Please enter valid mobile number.";   
        }
    }

    </script>

    @*@section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@
